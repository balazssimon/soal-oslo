using OsloExtensions;
using OsloExtensions.Extensions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SoaMetaModel
{
    // Inheritace from 'Generator<List<object>, GeneratorContext>' and constructor is only generated into the main file.
    public partial class NetbeansGenerator
    {
            #region functions from "C:\Users\Balazs\Documents\Visual Studio 2013\Projects\SoaMM\SoaGeneratorLib\NetbeansGeneratorLib.mcg"
            public List<string> Generated_Generate_build_xml()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- You may freely edit this file. See commented blocks below for -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- some examples of how to customize the build. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- (If you delete it and reopen the project it will be recreated.) -->");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("<!-- By default, only the Clean and Build commands use this build script. -->");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("<!-- Commands such as Run, Debug, and Test only use this build script if -->");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("<!-- the Compile on Save feature is turned off for the project. -->");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("<!-- in the project's Project Properties dialog box.-->");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project name=\"");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput("\" default=\"default\" basedir=\".\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<description>Builds, tests, and runs the project ");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput(".</description>");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("    <import file=\"nbproject/wsit-deploy.xml\"/>");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<import file=\"nbproject/build-impl.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	There exist several targets which are by default empty and which can be ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	used for execution of your tasks. These targets are usually executed ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	before and after some main targets. They are: ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-init:                 called before initialization of project properties ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-init:                called after initialization of project properties ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-compile:              called before javac compilation ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-compile:             called after javac compilation ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-compile-single:       called before javac compilation of single file");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-compile-single:      called after javac compilation of single file");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-compile-test:         called before javac compilation of JUnit tests");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-compile-test:        called after javac compilation of JUnit tests");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-compile-test-single:  called before javac compilation of single JUnit test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-compile-test-single: called after javac compilation of single JUunit test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-dist:                 called before archive building ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-dist:                called after archive building ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-clean:               called after cleaning build products ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-pre-run-deploy:           called before deploying");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-post-run-deploy:          called after deploying");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	Example of pluging an obfuscator after the compilation could look like ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<target name=\"-post-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<obfuscate>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<fileset dir=\"${build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</obfuscate>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	For list of available properties check the imported ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	nbproject/build-impl.xml file. ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	Other way how to customize the build is by overriding existing main targets.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	The target of interest are: ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	init-macrodef-javac:    defines macro for javac compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	init-macrodef-junit:   defines macro for junit execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	init-macrodef-debug:    defines macro for class debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	do-dist:                archive building");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	run:                    execution of project ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	javadoc-build:          javadoc generation ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	Example of overriding the target for project execution could look like ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<target name=\"run\" depends=\"<PROJNAME>-impl.jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<exec dir=\"bin\" executable=\"launcher.exe\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<arg file=\"${dist.jar}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	Notice that overridden target depends on jar target and not only on ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	compile target as regular run target does. Again, for list of available ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	properties which you can use check the target you are overriding in ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	nbproject/build-impl.xml file. ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_build_impl()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		*** GENERATED FROM project.xml - DO NOT EDIT  ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		***         EDIT ../build.xml INSTEAD         ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		For the purpose of easier reading the script");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		is divided into following sections:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- initialization");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- dist");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- javadoc");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- junit compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- junit execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- junit debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		- cleanup");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project xmlns:webproject1=\"http://www.netbeans.org/ns/web-project/1\" xmlns:webproject2=\"http://www.netbeans.org/ns/web-project/2\" xmlns:webproject3=\"http://www.netbeans.org/ns/web-project/3\" basedir=\"..\" default=\"default\" name=\"");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput("-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<import file=\"jaxws-build.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<import file=\"ant-deploy.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<fail message=\"Please build using Ant 1.7.1 or higher.\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<antversion atleast=\"1.7.1\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"dist,javadoc\" description=\"Build whole project.\" name=\"default\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				INITIALIZATION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init\" name=\"-init-private\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property file=\"nbproject/private/private.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private\" name=\"-init-user\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property file=\"${user.properties.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- The two properties below are usually overridden -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- by the active platform. Just a fallback. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"default.javac.source\" value=\"1.4\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"default.javac.target\" value=\"1.4\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property file=\"nbproject/project.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" if=\"dist.ear.dir\" name=\"-do-ear-init\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"have.tests\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<available file=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"have.sources\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<available file=\"${src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"netbeans.home+have.tests\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"netbeans.home\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"have.tests\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"no.javadoc.preview\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isfalse value=\"${javadoc.preview}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"javac.compilerargs\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"no.deps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<istrue value=\"${no.dependencies}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"no.dist.ear.dir\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"build.web.excludes\" value=\"${build.classes.excludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.compile.jsps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<istrue value=\"${compile.jsps}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.debug.server\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isset property=\"debug.server\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<istrue value=\"${debug.server}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<istrue value=\"${debug.server}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<istrue value=\"${debug.client}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.debug.client\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<istrue value=\"${debug.client}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.display.browser\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<istrue value=\"${display.browser}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.display.browser.debug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"do.display.browser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isset property=\"do.debug.client\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<available file=\"${conf.dir}/MANIFEST.MF\" property=\"has.custom.manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<available file=\"${persistence.xml.dir}/persistence.xml\" property=\"has.persistence.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.war.package.with.custom.manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"has.custom.manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.war.package.without.custom.manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"has.custom.manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.tmp.war.package.with.custom.manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"has.custom.manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isfalse value=\"${directory.deployment.supported}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isset property=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.tmp.war.package.without.custom.manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isset property=\"has.custom.manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isfalse value=\"${directory.deployment.supported}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<isset property=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.tmp.war.package\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isfalse value=\"${directory.deployment.supported}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"build.meta.inf.dir\" value=\"${build.web.dir}/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"\" property=\"application.args.param\" value=\"${application.args}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"application.args\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<equals arg1=\"${application.args}\" arg2=\"\" trim=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"source.encoding\" value=\"${file.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<isset property=\"javadoc.encoding\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<equals arg1=\"${javadoc.encoding}\" arg2=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"includes\" value=\"**\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"excludes\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"runmain.jvmargs\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath/p:'${toString:endorsed.classpath.path}'\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<length length=\"0\" string=\"${endorsed.classpath}\" when=\"greater\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" name=\"-init-cos\" unless=\"deploy.on.save\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"deploy.on.save\" value=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<istrue value=\"${j2ee.deploy.on.save}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"src.dir\">Must set src.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"test.src.dir\">Must set test.src.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.dir\">Must set build.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.web.dir\">Must set build.web.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.generated.dir\">Must set build.generated.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"dist.dir\">Must set dist.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.classes.dir\">Must set build.classes.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.test.results.dir\">Must set build.test.results.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"build.classes.excludes\">Must set build.classes.excludes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"dist.war\">Must set dist.war</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"j2ee.platform.classpath\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("The Java EE server classpath is not correctly set up. Your active server type is ${j2ee.server.type}.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("Either open the project in the IDE and assign the server or setup the server classpath manually.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("For example like this:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("ant -Duser.properties.file=&lt;path_to_property_file&gt; (where you put the property \"j2ee.platform.classpath\" in a .properties file)");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("or ant -Dj2ee.platform.classpath=&lt;server_classpath&gt; (where no properties file is used)");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-macrodef-property\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute name=\"name\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute name=\"value\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<property name=\"@{name}\" value=\"${@{value}}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-macrodef-javac\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/web-project/2\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${src.dir}\" name=\"srcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${build.classes.dir}\" name=\"destdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${javac.classpath}:${j2ee.platform.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${javac.debug}\" name=\"debug\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<property location=\"${build.dir}/empty\" name=\"empty.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<mkdir dir=\"${empty.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("							<include name=\"*\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						</dirset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<compilerarg line=\"${javac.compilerargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</javac>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-macrodef-junit\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/web-project/2\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<junit dir=\"${basedir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" showoutput=\"true\" tempdir=\"${java.io.tmpdir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<batchtest todir=\"${build.test.results.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("							<filename name=\"@{testincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						</fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</batchtest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<path path=\"${run.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${runmain.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-macrodef-java\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${main.class}\" name=\"classname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${debug.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<java classname=\"@{classname}\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${runmain.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<path path=\"@{classpath}:${j2ee.platform.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<propertyref prefix=\"run-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-macrodef-nbjsdebug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"nbjsdebugstart\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${client.url}\" name=\"webUrl\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<nbjsdebugstart urlPart=\"${client.urlPart}\" webUrl=\"@{webUrl}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"nbjpdastart\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${main.class}\" name=\"name\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${debug.classpath}:${j2ee.platform.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" transport=\"${debug-transport}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</nbjpdastart>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"nbjpdareload\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${build.classes.dir}\" name=\"dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<nbjpdareload>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<fileset dir=\"@{dir}\" includes=\"${fix.classes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<include name=\"${fix.includes}*.class\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</nbjpdareload>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"nbjpdaappreloaded\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<nbjpdaappreloaded/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-debug-args\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"version-output\" value=\"java version &quot;${ant.java.version}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"have-jdk-older-than-1.4\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<contains string=\"${version-output}\" substring=\"java version &quot;1.0\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<contains string=\"${version-output}\" substring=\"java version &quot;1.1\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<contains string=\"${version-output}\" substring=\"java version &quot;1.2\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<contains string=\"${version-output}\" substring=\"java version &quot;1.3\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<istrue value=\"${have-jdk-older-than-1.4}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<os family=\"windows\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"debug.transport\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<macrodef name=\"debug\" uri=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${main.class}\" name=\"classname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${debug.classpath}:${j2ee.platform.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<attribute default=\"${application.args.param}\" name=\"args\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<java classname=\"@{classname}\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${debug-args-line}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<jvmarg line=\"${runmain.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<propertyref prefix=\"run-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("						<mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					</syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<arg line=\"@{args}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					<customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-taskdefs\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"libs.CopyLibs.classpath\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("The libs.CopyLibs.classpath property is not set up.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("This property must point to ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("org-netbeans-modules-java-j2seproject-copylibstask.jar file which is part");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("of NetBeans IDE installation and is usually located at ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("&lt;netbeans_installation&gt;/java&lt;version&gt;/ant/extra folder.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("Either open the project in the IDE and make sure CopyLibs library");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("exists or setup the property manually. For example like this:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("ant -Dlibs.CopyLibs.classpath=a/path/to/org-netbeans-modules-java-j2seproject-copylibstask.jar");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<taskdef classpath=\"${libs.CopyLibs.classpath}\" resource=\"org/netbeans/modules/java/j2seproject/copylibstask/antlib.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-java,-init-macrodef-nbjpda,-init-macrodef-nbjsdebug,-init-macrodef-debug,-init-taskdefs\" name=\"init\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				COMPILATION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"no.dist.ear.dir\" name=\"deps-module-jar\" unless=\"no.deps\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"dist.ear.dir\" name=\"deps-ear-jar\" unless=\"no.deps\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init, deps-module-jar, deps-ear-jar\" name=\"deps-jar\" unless=\"no.deps\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-copy-webdir\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.web.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${web.docbase.dir}\" excludes=\"${build.web.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.web.dir}/WEB-INF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${webinf.dir}\" excludes=\"${build.web.excludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init, deps-jar, -pre-pre-compile, -pre-compile, -copy-manifest, -copy-persistence-xml, -copy-webdir, library-inclusion-in-archive,library-inclusion-in-manifest\" if=\"have.sources\" name=\"-do-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac destdir=\"${build.classes.dir}\" gensrcdir=\"${build.generated.sources.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"has.custom.manifest\" name=\"-copy-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.meta.inf.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.meta.inf.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${conf.dir}\" includes=\"MANIFEST.MF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.web.dir}/WEB-INF/classes/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.web.dir}/WEB-INF/classes/META-INF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${persistence.xml.dir}\" includes=\"persistence.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"compile\" description=\"Test compile JSP pages to expose compilation errors.\" if=\"do.compile.jsps\" name=\"compile-jsps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.generated.dir}/src\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<java classname=\"org.netbeans.modules.web.project.ant.JspC\" failonerror=\"true\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-uriroot\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg file=\"${basedir}/${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-d\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg file=\"${basedir}/${build.generated.dir}/src\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-die1\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-compilerSourceVM ${javac.source}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-compilerTargetVM ${javac.target}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-javaEncoding ${source.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<classpath path=\"${java.home}/../lib/tools.jar:${jspctask.classpath}:${jspcompilation.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.generated.dir}/classes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac classpath=\"${j2ee.platform.classpath}:${build.classes.dir}:${jspcompilation.classpath}\" destdir=\"${build.generated.dir}/classes\" srcdir=\"${build.generated.dir}/src\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"compile\" if=\"jsp.includes\" name=\"-do-compile-single-jsp\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"javac.jsp.includes\">Must select some files in the IDE or set javac.jsp.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.generated.dir}/src\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<java classname=\"org.netbeans.modules.web.project.ant.JspCSingle\" failonerror=\"true\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-uriroot\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg file=\"${basedir}/${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-d\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg file=\"${basedir}/${build.generated.dir}/src\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-die1\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-jspc.files\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg path=\"${jsp.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-compilerSourceVM ${javac.source}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-compilerTargetVM ${javac.target}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg value=\"-javaEncoding ${source.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<classpath path=\"${java.home}/../lib/tools.jar:${jspctask.classpath}:${jspcompilation.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.generated.dir}/classes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac classpath=\"${j2ee.platform.classpath}:${build.classes.dir}:${jspcompilation.classpath}\" destdir=\"${build.generated.dir}/classes\" srcdir=\"${build.generated.dir}/src\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<patternset includes=\"${javac.jsp.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</webproject2:javac>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"compile-single-jsp\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"jsp.includes\">Must select a file in the IDE or set jsp.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<antcall target=\"-do-compile-single-jsp\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				DIST BUILDING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-dist\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-pre-dist\" if=\"do.war.package.without.custom.manifest\" name=\"-do-dist-without-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<dirname file=\"${dist.war}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<jar compress=\"${jar.compress}\" jarfile=\"${dist.war}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-pre-dist\" if=\"do.war.package.with.custom.manifest\" name=\"-do-dist-with-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<dirname file=\"${dist.war}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<jar compress=\"${jar.compress}\" jarfile=\"${dist.war}\" manifest=\"${build.meta.inf.dir}/MANIFEST.MF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-pre-dist\" if=\"do.tmp.war.package.without.custom.manifest\" name=\"-do-tmp-dist-without-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<dirname file=\"${dist.war}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<jar compress=\"${jar.compress}\" jarfile=\"${dist.war}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-pre-dist\" if=\"do.tmp.war.package.with.custom.manifest\" name=\"-do-tmp-dist-with-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<dirname file=\"${dist.war}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<jar compress=\"${jar.compress}\" jarfile=\"${dist.war}\" manifest=\"${build.meta.inf.dir}/MANIFEST.MF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-pre-dist,-do-dist-with-manifest,-do-dist-without-manifest\" name=\"do-dist\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"dist.ear.dir\" name=\"library-inclusion-in-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.web.dir}/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<manifest file=\"${build.web.dir}/META-INF/MANIFEST.MF\" mode=\"update\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" name=\"library-inclusion-in-archive\" unless=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"dist.ear.dir\" name=\"-clean-webinf-lib\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<delete dir=\"${build.web.dir}/WEB-INF/lib\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-clean-webinf-lib,compile,compile-jsps,-pre-dist,library-inclusion-in-manifest\" if=\"do.tmp.war.package\" name=\"do-ear-dist\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<dirname file=\"${dist.ear.war}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<jar compress=\"${jar.compress}\" jarfile=\"${dist.ear.war}\" manifest=\"${build.web.dir}/META-INF/MANIFEST.MF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-dist\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,-pre-dist,do-dist,-post-dist\" description=\"Build distribution (WAR).\" name=\"dist\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-clean-webinf-lib,-init-cos,compile,-pre-dist,do-ear-dist,-post-dist\" description=\"Build distribution (WAR) to be packaged into an EAR.\" name=\"dist-ear\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				EXECUTION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"run-deploy,run-display-browser\" description=\"Deploy to server and show in browser.\" name=\"run\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-run-deploy\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-run-deploy\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-nbmodule-run-deploy\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- This target can be overriden by NetBeans modules. Don't override it directly, use -pre-run-deploy task instead. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-nbmodule-run-deploy\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- This target can be overriden by NetBeans modules. Don't override it directly, use -post-run-deploy task instead. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-run-deploy-am\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Task to deploy to the Access Manager runtime. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest,-pre-run-deploy,-pre-nbmodule-run-deploy,-run-deploy-nb,-init-deploy-ant,-deploy-ant,-run-deploy-am,-post-nbmodule-run-deploy,-post-run-deploy\" name=\"run-deploy\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbjpdaappreloaded/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"netbeans.home\" name=\"-run-deploy-nb\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbdeploy clientUrlPart=\"${client.urlPart}\" debugmode=\"false\" forceRedeploy=\"${forceRedeploy}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-init-deploy-ant\" unless=\"netbeans.home\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"deploy.ant.archive\" value=\"${dist.war}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"deploy.ant.docbase.dir\" value=\"${web.docbase.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"deploy.ant.resource.dir\" value=\"${resource.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"deploy.ant.enabled\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"dist,-run-undeploy-nb,-init-deploy-ant,-undeploy-ant\" name=\"run-undeploy\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"netbeans.home\" name=\"-run-undeploy-nb\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail message=\"Undeploy is not supported from within the IDE\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-pre-dist,dist,-post-dist\" name=\"verify\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbverify file=\"${dist.war}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"run-deploy,-init-display-browser,-display-browser-nb,-display-browser-cl\" name=\"run-display-browser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.display.browser\" name=\"-init-display-browser\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.display.browser.nb\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"netbeans.home\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"do.display.browser.cl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"deploy.ant.enabled\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.display.browser.nb\" name=\"-display-browser-nb\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbbrowse url=\"${client.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.display.browser.cl\" name=\"-get-browser\" unless=\"browser\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"rundll32\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<os family=\"windows\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition else=\"\" property=\"browser.args\" value=\"url.dll,FileProtocolHandler\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<os family=\"windows\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/bin/open\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<os family=\"mac\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property environment=\"env\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"${env.BROWSER}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"env.BROWSER\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/bin/firefox\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/bin/firefox\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/local/firefox/firefox\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/local/firefox/firefox\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/bin/mozilla\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/bin/mozilla\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/local/mozilla/mozilla\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/local/mozilla/mozilla\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/sfw/lib/firefox/firefox\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/sfw/lib/firefox/firefox\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/opt/csw/bin/firefox\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/opt/csw/bin/firefox\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/usr/sfw/lib/mozilla/mozilla\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/usr/sfw/lib/mozilla/mozilla\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"browser\" value=\"/opt/csw/bin/mozilla\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<available file=\"/opt/csw/bin/mozilla\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"-get-browser\" if=\"do.display.browser.cl\" name=\"-display-browser-cl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"browser\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("					Browser not found, cannot launch the deployed application. Try to set the BROWSER environment variable.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"browse.url\" value=\"${deploy.ant.client.url}${client.urlPart}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<echo>Launching ${browse.url}</echo>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<exec executable=\"${browser}\" spawn=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<arg line=\"${browser.args} ${browse.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-init-cos,compile-single\" name=\"run-main\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:java classname=\"${run.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single,-pre-test-run-single\" name=\"run-test-with-main\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				DEBUGGING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-init-cos,compile,compile-jsps,-do-compile-single-jsp,-pre-dist,-do-tmp-dist-with-manifest,-do-tmp-dist-without-manifest\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbstartserver debugmode=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<antcall target=\"connect-debugger\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbdeploy clientUrlPart=\"${client.urlPart}\" debugmode=\"true\" forceRedeploy=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<antcall target=\"debug-display-browser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<antcall target=\"connect-client-debugger\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.debug.server\" name=\"connect-debugger\" unless=\"is.debugged\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbjpdaconnect address=\"${jpda.address}\" host=\"${jpda.host}\" name=\"${name}\" transport=\"${jpda.transport}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<path path=\"${debug.classpath}:${j2ee.platform.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<sourcepath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<path path=\"${web.docbase.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</sourcepath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</nbjpdaconnect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.display.browser.debug\" name=\"debug-display-browser\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbbrowse url=\"${client.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target if=\"do.debug.client\" name=\"connect-client-debugger\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjsdebugstart webUrl=\"${client.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,compile-jsps,-do-compile-single-jsp,debug\" if=\"netbeans.home\" name=\"debug-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjpdastart name=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:debug classname=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single-main\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" name=\"-pre-debug-fix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"fix.includes\">Must set fix.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"javac.includes\" value=\"${fix.includes}.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjpdareload/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				JAVADOC SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" name=\"javadoc-build\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${dist.javadoc.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<javadoc additionalparam=\"${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<path path=\"${javac.classpath}:${j2ee.platform.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<filename name=\"**/*.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<include name=\"**/*.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</javadoc>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,javadoc-build\" if=\"netbeans.home\" name=\"javadoc-browse\" unless=\"no.javadoc.preview\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbbrowse file=\"${dist.javadoc.dir}/index.html\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,javadoc-build,javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				JUNIT COMPILATION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.test.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"j2ee.platform.embeddableejb.classpath\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test\" if=\"have.tests\" name=\"-do-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac classpath=\"${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.test.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-pre-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:javac classpath=\"${javac.test.classpath}:${j2ee.platform.classpath}:${j2ee.platform.embeddableejb.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" srcdir=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<copy todir=\"${build.test.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				JUNIT EXECUTION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:junit testincludes=\"**/*Test.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"have.tests\" name=\"test-report\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject2:junit excludes=\"\" includes=\"${test.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				JUNIT DEBUGGING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property location=\"${build.test.results.dir}/TEST-${test.class}.xml\" name=\"test.report.file\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<delete file=\"${test.report.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- must exist, otherwise the XML formatter would fail -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:debug args=\"${test.class}\" classname=\"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner\" classpath=\"${ant.home}/lib/ant.jar:${ant.home}/lib/ant-junit.jar:${debug.test.classpath}:${j2ee.platform.embeddableejb.classpath}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<arg value=\"showoutput=true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<arg value=\"formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				<arg value=\"formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${test.report.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			</customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</webproject1:debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,compile-test,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<webproject1:nbjpdareload dir=\"${build.test.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				CLEANUP SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"no.dist.ear.dir\" name=\"deps-clean\" unless=\"no.deps\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" name=\"do-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<condition property=\"build.dir.to.clean\" value=\"${build.web.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<isset property=\"dist.ear.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"build.dir.to.clean\" value=\"${build.web.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<delete includeEmptyDirs=\"true\" quiet=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<fileset dir=\"${build.dir.to.clean}/WEB-INF/lib\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<delete dir=\"${build.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<available file=\"${build.dir.to.clean}/WEB-INF/lib\" property=\"status.clean-failed\" type=\"dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<delete dir=\"${dist.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"do-clean\" if=\"status.clean-failed\" name=\"check-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<echo message=\"Warning: unable to delete some files in ${build.web.dir}/WEB-INF/lib - they are probably locked by the J2EE server. \"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<echo level=\"info\" message=\"To delete all files undeploy the module from Server Registry in Runtime tab and then use Clean again.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init\" if=\"netbeans.home\" name=\"undeploy-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<nbundeploy failOnError=\"false\" startServer=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"-post-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"init,undeploy-clean,deps-clean,do-clean,check-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target depends=\"clean\" description=\"Clean build products.\" name=\"clean-ear\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_jax_ws()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<jax-ws xmlns=\"http://www.netbeans.org/ns/jax-ws/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<services>");
                    __printer.WriteLine();
                    int __loop1_iteration = 0;
                    var __loop1_result =
                        (from __loop1_tmp_item___noname1 in EnumerableExtensions.Enumerate((Instances).GetEnumerator())
                        from __loop1_tmp_item_endp in EnumerableExtensions.Enumerate((__loop1_tmp_item___noname1).GetEnumerator()).OfType<Endpoint>()
                        select
                            new
                            {
                                __loop1_item___noname1 = __loop1_tmp_item___noname1,
                                __loop1_item_endp = __loop1_tmp_item_endp,
                            }).ToArray();
                    foreach (var __loop1_item in __loop1_result)
                    {
                        var __noname1 = __loop1_item.__loop1_item___noname1;
                        var endp = __loop1_item.__loop1_item_endp;
                        ++__loop1_iteration;
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("		<service name=\"");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\">");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<implementation-class>");
                        __printer.Write(Generated_GetPackage(endp.Namespace).ToLower());
                        __printer.WriteTemplateOutput(".");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("</implementation-class>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("		</service>");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</services>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<clients/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<jsr109>false</jsr109>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</jax-ws>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_sun_jaxws()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<endpoints version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/jax-ws/ri/runtime\">");
                    __printer.WriteLine();
                    int __loop2_iteration = 0;
                    var __loop2_result =
                        (from __loop2_tmp_item___noname2 in EnumerableExtensions.Enumerate((Instances).GetEnumerator())
                        from __loop2_tmp_item_endp in EnumerableExtensions.Enumerate((__loop2_tmp_item___noname2).GetEnumerator()).OfType<Endpoint>()
                        select
                            new
                            {
                                __loop2_item___noname2 = __loop2_tmp_item___noname2,
                                __loop2_item_endp = __loop2_tmp_item_endp,
                            }).ToArray();
                    foreach (var __loop2_item in __loop2_result)
                    {
                        var __noname2 = __loop2_item.__loop2_item___noname2;
                        var endp = __loop2_item.__loop2_item_endp;
                        ++__loop2_iteration;
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("  <endpoint implementation=\"");
                        __printer.Write(Generated_GetPackage(endp.Namespace).ToLower());
                        __printer.WriteTemplateOutput(".");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\" name=\"");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\" url-pattern=\"/services/");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\"/>");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</endpoints>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_jaxws_build()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		*** GENERATED FROM jax-ws.xml - DO NOT EDIT !                             ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		*** TO MODIFY wsimport options USE Web Service node -> Edit WS Attributes ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		*** TO CHANGE TARGETS GENERATED TO jaxws-build.xml COPY THOSE             ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		*** TARGETS TO ../build.xml AND MODIFY THAT FILE INSTEAD                  ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project xmlns:xalan=\"http://xml.apache.org/xslt\" xmlns:webproject2=\"http://www.netbeans.org/ns/web-project/2\" xmlns:jaxws=\"http://www.netbeans.org/ns/jax-ws/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				JAX-WS WSGEN SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("				===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<target name=\"wsgen-init\" depends=\"init, -do-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.generated.sources.dir}/jax-ws/resources/\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<mkdir dir=\"${build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<taskdef name=\"wsgen\" classname=\"com.sun.tools.ws.ant.WsGen\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<classpath path=\"${java.home}/../lib/tools.jar:${build.classes.dir}:${j2ee.platform.wsgen.classpath}:${javac.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</taskdef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	");
                    int __loop3_iteration = 0;
                    var __loop3_result =
                        (from __loop3_tmp_item___noname3 in EnumerableExtensions.Enumerate((Instances).GetEnumerator())
                        from __loop3_tmp_item_endp in EnumerableExtensions.Enumerate((__loop3_tmp_item___noname3).GetEnumerator()).OfType<Endpoint>()
                        select
                            new
                            {
                                __loop3_item___noname3 = __loop3_tmp_item___noname3,
                                __loop3_item_endp = __loop3_tmp_item_endp,
                            }).ToArray();
                    foreach (var __loop3_item in __loop3_result)
                    {
                        var __noname3 = __loop3_item.__loop3_item___noname3;
                        var endp = __loop3_item.__loop3_item_endp;
                        ++__loop3_iteration;
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("	<target name=\"wsgen-");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\" depends=\"wsgen-init\">");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("		<wsgen sourcedestdir=\"${build.generated.sources.dir}/jax-ws\" resourcedestdir=\"${build.generated.sources.dir}/jax-ws/resources/\" destdir=\"${build.generated.sources.dir}/jax-ws\" verbose=\"true\" xendorsed=\"true\" keep=\"true\" genwsdl=\"true\" sei=\"");
                        __printer.Write(endp.Namespace.FullName.ToLower());
                        __printer.WriteTemplateOutput(".");
                        __printer.Write(endp.Name);
                        __printer.WriteTemplateOutput("\">");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<classpath path=\"${java.home}/../lib/tools.jar:${build.classes.dir}:${j2ee.platform.wsgen.classpath}:${javac.classpath}\"/>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("		</wsgen>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("	</target>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("	");
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	JAX-WS WSIMPORT SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_project_properties()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("build.classes.dir=${build.web.dir}/WEB-INF/classes");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.classes.excludes=**/*.java,**/*.form");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.dir=build");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.generated.dir=${build.dir}/generated");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.generated.sources.dir=${build.dir}/generated-sources");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.test.classes.dir=${build.dir}/test/classes");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.test.results.dir=${build.dir}/test/results");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.web.dir=${build.dir}/web");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.web.excludes=${build.classes.excludes}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("client.urlPart=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("compile.jsps=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("conf.dir=${source.root}/conf");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("debug.classpath=${build.classes.dir}:${javac.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("debug.test.classpath=\\${run.test.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("display.browser=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.dir=dist");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("# Files to be excluded from distribution war");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("dist.archive.excludes=");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.ear.war=${dist.dir}/${war.ear.name}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.javadoc.dir=${dist.dir}/javadoc");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.war=${dist.dir}/${war.name}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("endorsed.classpath=");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${libs.javaee-endorsed-api-6.0.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("excludes=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("file.reference.SAMLHelper.jar=web\\\\WEB-INF\\\\lib\\\\SAMLHelper.jar");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("includes=**");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("j2ee.deploy.on.save=true");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("j2ee.platform=1.7-web");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans6)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("j2ee.platform=1.6-web");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("j2ee.server.type=gfv3ee6");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("jar.compress=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.classpath=");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${file.reference.SAMLHelper.jar}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Space-separated list of extra javac options");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.compilerargs=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.debug=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.deprecation=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.processorpath=");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${javac.classpath}");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("javac.source=1.7");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("javac.target=1.7");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans6)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("javac.source=1.5");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("javac.target=1.5");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.test.classpath=");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${javac.classpath}:");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${build.classes.dir}:");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${libs.junit.classpath}:");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${libs.junit_4.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.additionalparam=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.author=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.encoding=${source.encoding}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.noindex=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.nonavbar=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.notree=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.preview=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.private=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.splitindex=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.use=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.version=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.windowtitle=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("jspcompilation.classpath=${jspc.classpath}:${javac.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("lib.dir=${web.docbase.dir}/WEB-INF/lib");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("no.dependencies=false");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("persistence.xml.dir=${conf.dir}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("platform.active=default_platform");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("resource.dir=setup");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("run.test.classpath=");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${javac.test.classpath}:");
                    __printer.Write("\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	${build.test.classes.dir}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Space-separated list of JVM arguments used when running a class with a main method or a unit test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value):");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("runmain.jvmargs=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("source.encoding=UTF-8");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("source.root=src");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("src.dir=${source.root}/java");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("test.src.dir=test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("war.content.additional=");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("war.ear.name=${war.name}");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans6)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("war.ear.name=");
                        __printer.Write(Generated_GetProjectName());
                        __printer.WriteTemplateOutput(".war");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("war.name=");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput(".war");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("web.docbase.dir=web");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("webinf.dir=web/WEB-INF");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_project_xml()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project xmlns=\"http://www.netbeans.org/ns/project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<type>org.netbeans.modules.web.project</type>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<configuration>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<buildExtensions xmlns=\"http://www.netbeans.org/ns/ant-build-extender/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<extension file=\"jaxws-build.xml\" id=\"jaxws\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</buildExtensions>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<data xmlns=\"http://www.netbeans.org/ns/web-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<name>");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput("</name>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<minimum-ant-version>1.6.5</minimum-ant-version>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<web-module-libraries>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <library dirs=\"200\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <file>${file.reference.SAMLHelper.jar}</file>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <path-in-war>WEB-INF/lib</path-in-war>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </library>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </web-module-libraries>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<web-module-additional-libraries/>");
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans6)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<source-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("				<root id=\"src.dir\"/>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			</source-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<test-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("				<root id=\"test.src.dir\"/>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			</test-roots>");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    if (Properties.NetbeansVersion == NetbeansVersion.Netbeans8)
                    {
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<source-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("				<root id=\"src.dir\" name=\"Source Packages\"/>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			</source-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			<test-roots>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("				<root id=\"test.src.dir\" name=\"Test Packages\"/>");
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("			</test-roots>");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</data>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</configuration>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_web_WEB_INF_sun_web()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!DOCTYPE sun-web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Application Server 9.0 Servlet 2.5//EN\" \"http://www.sun.com/software/appserver/dtds/sun-web-app_2_5-0.dtd\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<sun-web-app error-url=\"\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<context-root>/");
                    __printer.Write(Generated_GetProjectName());
                    __printer.WriteTemplateOutput("</context-root>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<class-loader delegate=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	<jsp-config>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		<property name=\"keepgenerated\" value=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("			<description>Keep a copy of the generated servlet class' java code.</description>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("		</property>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("	</jsp-config>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</sun-web-app>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_nbproject_wsit_deploy()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project default=\"-post-run-deploy\" basedir=\"..\" xmlns:webproject3=\"http://www.netbeans.org/ns/web-project/3\" xmlns:webproject2=\"http://www.netbeans.org/ns/web-project/2\" xmlns:jaxws=\"http://www.netbeans.org/ns/jax-ws/1\" xmlns:webproject1=\"http://www.netbeans.org/ns/web-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-wsit-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/private/private.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"user.properties.file\" value=\"${netbeans.user}/build.properties\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"user.properties.file\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"${deploy.ant.properties.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"appserver.root\" value=\"${sjsas.root}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"sjsas.root\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"appserver.password\" value=\"${sjsas.password}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"sjsas.password\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"appserver.root\" value=\"${gfv3.root}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"gfv3.root\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"appserver.password\" value=\"${gfv3.password}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"gfv3.password\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"appserver.password\" value=\"changeit\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"appserver.password\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"user.properties.file\">Must set user properties file</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"appserver.root\">Must set Sun app server root</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"appserver.password\">Must set Sun app server password</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-create-wsit-prop\" unless=\"do.not.create.wsit.prop\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo file=\"nbproject/wsit.properties\" message=\"AS_ADMIN_USERPASSWORD=${appserver.password}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-delete-create-wsit-file\" if=\"user.created\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete file=\"nbproject/wsit.createuser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"create-user\" unless=\"user.exists\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"creation.out\" executable=\"${appserver.root}/bin/asadmin\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"unix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"create-file-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"--passwordfile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"nbproject/wsit.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"wsitUser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"creation.out\" executable=\"${appserver.root}/bin/asadmin\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"mac\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"create-file-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"--passwordfile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"nbproject/wsit.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"wsitUser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"creation.out\" executable=\"${appserver.root}/bin/asadmin.bat\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"windows\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"create-file-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"--passwordfile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"nbproject/wsit.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"wsitUser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"user.created\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${creation.out}\" substring=\"create-file-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${creation.out}\" substring=\"success\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"-delete-create-wsit-file\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-do-create-user\" if=\"do-create-user\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <available property=\"do.not.create.wsit.prop\" file=\"nbproject/wsit.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"-create-wsit-prop\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"as.users\" executable=\"${appserver.root}/bin/asadmin\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"unix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"list-file-users\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"as.users\" executable=\"${appserver.root}/bin/asadmin\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"mac\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"list-file-users\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <exec timeout=\"10000\" outputproperty=\"as.users\" executable=\"${appserver.root}/bin/asadmin.bat\" failonerror=\"false\" failifexecutionfails=\"false\" osfamily=\"windows\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg value=\"list-file-users\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"user.exists\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <contains string=\"${as.users}\" substring=\"wsitUser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"create-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-run-deploy\" depends=\"-wsit-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <available property=\"do-create-user\" file=\"nbproject/wsit.createuser\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"-do-create-user\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_Client_build_xml()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- You may freely edit this file. See commented blocks below for -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- some examples of how to customize the build. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- (If you delete it and reopen the project it will be recreated.) -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- By default, only the Clean and Build commands use this build script. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- Commands such as Run, Debug, and Test only use this build script if -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- the Compile on Save feature is turned off for the project. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!-- in the project's Project Properties dialog box.-->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project name=\"");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput("\" default=\"default\" basedir=\".\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <description>Builds, tests, and runs the project ");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput(".</description>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <import file=\"nbproject/build-impl.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    There exist several targets which are by default empty and which can be ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    used for execution of your tasks. These targets are usually executed ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    before and after some main targets. They are: ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-init:                 called before initialization of project properties");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-init:                called after initialization of project properties");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-compile:              called before javac compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-compile:             called after javac compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-compile-single:       called before javac compilation of single file");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-compile-single:      called after javac compilation of single file");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-compile-test:         called before javac compilation of JUnit tests");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-compile-test:        called after javac compilation of JUnit tests");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-compile-test-single:  called before javac compilation of single JUnit test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-compile-test-single: called after javac compilation of single JUunit test");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -pre-jar:                  called before JAR building");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-jar:                 called after JAR building");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -post-clean:               called after cleaning build products");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    (Targets beginning with '-' are not intended to be called on their own.)");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    Example of inserting an obfuscator after compilation could look like this:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <target name=\"-post-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <obfuscate>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <fileset dir=\"${build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </obfuscate>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    For list of available properties check the imported ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    nbproject/build-impl.xml file. ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    Another way to customize the build is by overriding existing main targets.");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    The targets of interest are: ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -init-macrodef-javac:     defines macro for javac compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -init-macrodef-junit:     defines macro for junit execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -init-macrodef-debug:     defines macro for class debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -init-macrodef-java:      defines macro for class execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -do-jar:                  JAR building");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      run:                      execution of project ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      -javadoc-build:           Javadoc generation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("      test-report:              JUnit report generation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    An example of overriding the target for project execution could look like this:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <target name=\"run\" depends=\"");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput("-impl.jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <exec dir=\"bin\" executable=\"launcher.exe\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg file=\"${dist.jar}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </exec>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    Notice that the overridden target depends on the jar target and not only on ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    the compile target as the regular run target does. Again, for a list of available ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    properties which you can use, check the target you are overriding in the");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    nbproject/build-impl.xml file. ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_Client_nbproject_build_impl()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("*** GENERATED FROM project.xml - DO NOT EDIT  ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("***         EDIT ../build.xml INSTEAD         ***");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("For the purpose of easier reading the script");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("is divided into following sections:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - initialization");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - jar");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - javadoc");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - test compilation");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - test execution");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - test debugging");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - applet");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("  - cleanup");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" basedir=\"..\" default=\"default\" name=\"");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput("-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <fail message=\"Please build using Ant 1.8.0 or higher.\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <antversion atleast=\"1.8.0\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!-- ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                INITIALIZATION SECTION ");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init\" name=\"-init-private\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/private/config.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/private/configs/${config}.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/private/private.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"${user.properties.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- The two properties below are usually overridden -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- by the active platform. Just a fallback. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"default.javac.source\" value=\"1.4\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"default.javac.target\" value=\"1.4\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/configs/${config}.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"nbproject/project.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"platform.java\" value=\"${java.home}/bin/java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <available file=\"${manifest.file}\" property=\"manifest.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"splashscreen.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available file=\"${application.splash}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"main.class.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"main.class\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"profile.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"javac.profile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <matches pattern=\"1\\.");
                    __printer.Write(89);
                    __printer.WriteTemplateOutput("(\\..*)?\" string=\"${javac.source}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.archive\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <istrue value=\"${jar.archive.disabled}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${not.archive.disabled}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.mkdist\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"do.archive\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"libs.CopyLibs.classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <istrue value=\"${mkdist.disabled}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.archive+manifest.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"manifest.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${do.archive}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.archive+main.class.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"main.class.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${do.archive}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.archive+splashscreen.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"splashscreen.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${do.archive}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.archive+profile.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"profile.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${do.archive}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"have.tests\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available file=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"have.sources\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available file=\"${src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"netbeans.home+have.tests\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"netbeans.home\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"have.tests\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"no.javadoc.preview\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"javadoc.preview\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isfalse value=\"${javadoc.preview}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"run.jvmargs\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"run.jvmargs.ide\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.compilerargs\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"work.dir\" value=\"${basedir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"no.deps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${no.dependencies}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.debug\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javadoc.preview\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"application.args\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"source.encoding\" value=\"${file.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"runtime.encoding\" value=\"${source.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"javadoc.encoding\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"includes\" value=\"**\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"excludes\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"do.depend\" value=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"do.depend.true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <istrue value=\"${do.depend}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath/p:'${toString:endorsed.classpath.path}'\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"endorsed.classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"profile.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"false\" property=\"jdkBug6558476\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <matches pattern=\"1\\.");
                    __printer.Write(56);
                    __printer.WriteTemplateOutput("\" string=\"${java.specification.version}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <os family=\"unix\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.fork\" value=\"${jdkBug6558476}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"jar.index\" value=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"jar.index.metainf\" value=\"${jar.index}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"copylibs.rebase\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <available file=\"${meta.inf.dir}/persistence.xml\" property=\"has.persistence.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"junit.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"testng.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"junit+testng.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${junit.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${testng.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <istrue value=\"${junit+testng.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <istrue value=\"${junit+testng.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"src.dir\">Must set src.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.src.dir\">Must set test.src.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"build.dir\">Must set build.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"dist.dir\">Must set dist.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"build.classes.dir\">Must set build.classes.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"dist.jar\">Must set dist.jar</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-macrodef-property\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"name\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"value\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"@{name}\" value=\"${@{value}}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${src.dir}\" name=\"srcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.debug}\" name=\"debug\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mkdir dir=\"${empty.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mkdir dir=\"@{apgeneratedsrcdir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <include name=\"*\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </dirset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${javac.compilerargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg value=\"-processorpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg path=\"@{processorpath}:${empty.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${ap.processors.internal}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${annotation.processing.processor.options}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg value=\"-s\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${ap.proc.none.internal}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </javac>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${src.dir}\" name=\"srcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.debug}\" name=\"debug\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mkdir dir=\"${empty.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <include name=\"*\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </dirset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </src>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <compilerarg line=\"${javac.compilerargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </javac>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"depend\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${src.dir}\" name=\"srcdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <depend cache=\"${build.dir}/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </depend>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"force-recompile\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <fail unless=\"javac.includes\">Must set javac.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <path>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </path>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <globmapper from=\"*.java\" to=\"*.class\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </pathconvert>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <files includesfile=\"${javac.includesfile.binary}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <fileset file=\"${javac.includesfile.binary}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${junit.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <isset property=\"test.method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <istrue value=\"${junit.available}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"test.method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-test-properties\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"test.binarytestincludes\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"test.binaryexcludes\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"junit.forkmode\" value=\"perTest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-ea\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"junit.forkmode\" value=\"perTest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <batchtest todir=\"${build.test.results.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <filename name=\"@{testincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <filename name=\"${test.binarytestincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </batchtest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-ea\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"testng\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <isset property=\"test.method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <union id=\"test.set\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},**/*.xml,${excludes}\" includes=\"@{includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <filename name=\"@{testincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </union>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput("\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <propertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </propertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </testng>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-macrodef-test-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <echo>No tests executed.</echo>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:testng>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <path path=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${run.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${run.jvmargs.ide}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:test-impl>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"junit-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"junit.forkmode\" value=\"perTest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-ea\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${debug-args-line}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"junit-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"junit.forkmode\" value=\"perTest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <batchtest todir=\"${build.test.results.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <filename name=\"@{testincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <filename name=\"${test.binarytestincludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </batchtest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-ea\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${debug-args-line}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:junit-debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"testng-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"testClass\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testMethod\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize2\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <isset property=\"test.method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <condition else=\"-suitename ");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput(" -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <customize2/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg value=\"-ea\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <arg line=\"${testng.debug.mode}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <arg line=\"-d ${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <arg line=\"${testng.cmd.args}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"testng-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"testClass\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testMethod\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element implicit=\"true\" name=\"customize2\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize2/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:testng-debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"testClass\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testMethod\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <path path=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${run.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <jvmarg line=\"${run.jvmargs.ide}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:test-debug-impl>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${includes}\" name=\"includes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${excludes}\" name=\"excludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"**\" name=\"testincludes\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testmethods\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"testClass\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"testMethod\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize2>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </customize2>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </j2seproject3:testng-debug-impl>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                pre NB7.2 profiling section; consider it deprecated");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"resolve\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"name\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"value\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property name=\"@{name}\" value=\"${env.@{value}}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"profile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"classname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property environment=\"env\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${profiler.info.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <arg line=\"${application.args}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"run-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                end of pre NB7.2 profiling section");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"nbjpdastart\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"name\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"\" name=\"stopclassname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </nbjpdastart>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"nbjpdareload\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${build.classes.dir}\" name=\"dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <nbjpdareload>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <include name=\"${fix.includes}*.class\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </nbjpdareload>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-debug-args\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"version-output\" value=\"java version &quot;${ant.java.version}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"have-jdk-older-than-1.4\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <istrue value=\"${have-jdk-older-than-1.4}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <os family=\"windows\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"debug.transport\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"classname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${debug-args-line}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${run.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${run.jvmargs.ide}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"run-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-macrodef-java\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${main.class}\" name=\"classname\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${run.classpath}\" name=\"classpath\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"jvm\" name=\"jvm\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${run.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <jvmarg line=\"${run.jvmargs.ide}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <path path=\"@{classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <propertyref prefix=\"run-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-macrodef-copylibs\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <macrodef name=\"copylibs\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute default=\"${manifest.file}\" name=\"manifest\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <element name=\"customize\" optional=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <pathconvert property=\"run.classpath.without.build.classes.dir\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <map from=\"${build.classes.dir.resolved}\" to=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </pathconvert>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <pathconvert pathsep=\" \" property=\"jar.classpath\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <path path=\"${run.classpath.without.build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <chainedmapper>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <flattenmapper/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <filtermapper>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                            <replacestring from=\" \" to=\"%20\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        </filtermapper>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <globmapper from=\"*\" to=\"lib/*\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </chainedmapper>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </pathconvert>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <manifest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                        <customize/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    </manifest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </copylibs>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </sequential>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </macrodef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-presetdef-jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <presetdef name=\"jar\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </jar>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </presetdef>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-init-ap-cmdline-properties\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"annotation.processing.enabled\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"annotation.processing.processors.list\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"annotation.processing.processor.options\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"annotation.processing.run.all.processors\" value=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"ap.supported.internal\" value=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <matches pattern=\"1\\.");
                    __printer.Write(0 - 5);
                    __printer.WriteTemplateOutput("(\\..*)?\" string=\"${javac.source}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isfalse value=\"${annotation.processing.run.all.processors}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isfalse value=\"${annotation.processing.enabled}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"ap.cmd.line.internal\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                COMPILATION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property location=\"${build.dir}/built-jar.properties\" name=\"built-jar.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete file=\"${built-jar.properties}\" quiet=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo level=\"warn\" message=\"Cycle detected: ");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput(" was already built\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <touch file=\"${built-jar.properties}\" verbose=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"-warn-already-built-jar\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <propertyfile file=\"${built-jar.properties}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <entry key=\"${basedir}\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </propertyfile>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" name=\"-check-automatic-build\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <available file=\"${build.classes.dir}/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"clean\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"do.depend.true\" name=\"-compile-depend\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <pathconvert property=\"build.generated.subdirs\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <include name=\"*\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </dirset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </pathconvert>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy todir=\"${build.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.classes.dir}/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy todir=\"${build.classes.dir}/META-INF\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-compile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:force-recompile/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-compile-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ====================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                JAR BUILDING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ====================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" name=\"-pre-pre-jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${dist.jar.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"Main-Class\" value=\"${main.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </manifest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"Profile\" value=\"${javac.profile}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </manifest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.classes.dir}/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}/META-INF\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <attribute name=\"SplashScreen-Image\" value=\"META-INF/${splashscreen.basename}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </manifest>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo level=\"info\">To run this application from the command line without Ant, try:</echo>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo level=\"info\">java -jar \"${dist.jar.resolved}\"</echo>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <pathconvert property=\"run.classpath.with.dist.jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </pathconvert>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"main.class.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <isset property=\"main.class.available\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset file=\"${tmp.manifest.file}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </delete>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-jar\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                EXECUTION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg line=\"${application.args}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </j2seproject1:java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-do-not-recompile\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.includes.binary\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single\" name=\"run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:java classname=\"${run.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                DEBUGGING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdastart name=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg line=\"${application.args}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </j2seproject3:debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:debug classname=\"${debug.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" name=\"-pre-debug-fix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"fix.includes\">Must set fix.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property name=\"javac.includes\" value=\"${fix.includes}.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdareload/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                PROFILING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                pre NB7.2 profiler integration");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <profile/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <profile classname=\"${profile.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${run.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <profile classname=\"sun.applet.AppletViewer\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg value=\"${applet.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </profile>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </nbprofiledirect>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <jvmarg line=\"${profiler.info.jvmargs}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <test name=\"${profile.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${run.test.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <propertyref prefix=\"test-sys-prop.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </syspropertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <formatter type=\"brief\" usefile=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <formatter type=\"xml\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </junit>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                end of pre NB72 profiling section");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"netbeans.home\" name=\"-profile-check\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"profiler.configured\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </or>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <startprofiler/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"run\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <startprofiler/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"run-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <startprofiler/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <startprofiler/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcal target=\"run-test-with-main\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <startprofiler/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"run-applet\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===============");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                JAVADOC SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===============");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${dist.javadoc.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <isset property=\"endorsed.classpath.cmd.line.arg\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <matches pattern=\"1\\.");
                    __printer.Write(56);
                    __printer.WriteTemplateOutput("(\\..*)?\" string=\"${java.version}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <path path=\"${javac.classpath}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </classpath>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <filename name=\"**/*.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <include name=\"**/*.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <exclude name=\"*.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </javadoc>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy todir=\"${dist.javadoc.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <filename name=\"**/doc-files/**\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <include name=\"**/doc-files/**\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </fileset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <nbbrowse file=\"${dist.javadoc.dir}/index.html\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                TEST COMPILATION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.test.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"do.depend.true\" name=\"-compile-test-depend\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy todir=\"${build.test.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-compile-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-pre-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${test.src.dir}\" srcdir=\"${test.src.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <copy todir=\"${build.test.classes.dir}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </copy>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-compile-test-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                TEST EXECUTION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:test includes=\"${includes}\" testincludes=\"**/*Test.java\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.test.results.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.class\">Must select some files in the IDE or set test.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                TEST DEBUGGING SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =======================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                APPLET EXECUTION SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single\" name=\"run-applet\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject1:java classname=\"sun.applet.AppletViewer\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg value=\"${applet.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </j2seproject1:java>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                APPLET DEBUGGING  SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                =========================");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <arg value=\"${applet.url}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </customize>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </j2seproject3:debug>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <!--");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===============");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                CLEANUP SECTION");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                ===============");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property location=\"${build.dir}/built-clean.properties\" name=\"built-clean.properties\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete file=\"${built-clean.properties}\" quiet=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <echo level=\"warn\" message=\"Cycle detected: ");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput(" was already built\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <mkdir dir=\"${build.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <touch file=\"${built-clean.properties}\" verbose=\"false\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <antcall target=\"-warn-already-built-clean\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <propertyfile file=\"${built-clean.properties}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <entry key=\"${basedir}\" value=\"\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </propertyfile>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init\" name=\"-do-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete dir=\"${build.dir}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-post-clean\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- Empty placeholder for easier customization. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <!-- You can override this target in the ../build.xml file. -->");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target name=\"-check-call-dep\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <property file=\"${call.built.properties}\" prefix=\"already.built.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <condition property=\"should.call.dep\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                    <isset property=\"already.built.${call.subproject}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                </not>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <available file=\"${call.script}\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </and>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </condition>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <propertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <propertyref prefix=\"transfer.\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </propertyset>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </ant>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </target>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_Client_nbproject_project_properties()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("annotation.processing.enabled=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("annotation.processing.enabled.in.editor=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("annotation.processing.processors.list=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("annotation.processing.run.all.processors=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("application.title=");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("application.vendor=Balazs");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.classes.dir=${build.dir}/classes");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.classes.excludes=**/*.java,**/*.form");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# This directory is removed when the project is cleaned:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.dir=build");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.generated.dir=${build.dir}/generated");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.generated.sources.dir=${build.dir}/generated-sources");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Only compile against the classpath explicitly listed here:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.sysclasspath=ignore");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.test.classes.dir=${build.dir}/test/classes");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("build.test.results.dir=${build.dir}/test/results");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Uncomment to specify the preferred debugger connection transport:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("#debug.transport=dt_socket");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("debug.classpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${run.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("debug.test.classpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${run.test.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Files in build.classes.dir which should be excluded from distribution jar");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.archive.excludes=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# This directory is removed when the project is cleaned:");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.dir=dist");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.jar=${dist.dir}/");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput(".jar");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("dist.javadoc.dir=${dist.dir}/javadoc");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("endorsed.classpath=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("excludes=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("includes=**");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("jar.compress=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.classpath=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("# Space-separated list of extra javac options");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.compilerargs=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.deprecation=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.processorpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${javac.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.source=1.7");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.target=1.7");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.test.classpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${javac.classpath}:\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${build.classes.dir}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javac.test.processorpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${javac.test.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.additionalparam=");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.author=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.encoding=${source.encoding}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.noindex=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.nonavbar=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.notree=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.private=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.splitindex=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.use=true");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.version=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("javadoc.windowtitle=");
                    __printer.WriteLine();
                    int __loop4_iteration = 0;
                    var __loop4_result =
                        (from __loop4_tmp_item___noname4 in EnumerableExtensions.Enumerate((Instances).GetEnumerator())
                        from __loop4_tmp_item_ns in EnumerableExtensions.Enumerate((__loop4_tmp_item___noname4).GetEnumerator()).OfType<Namespace>()
                        select
                            new
                            {
                                __loop4_item___noname4 = __loop4_tmp_item___noname4,
                                __loop4_item_ns = __loop4_tmp_item_ns,
                            }).ToArray();
                    foreach (var __loop4_item in __loop4_result)
                    {
                        var __noname4 = __loop4_item.__loop4_item___noname4;
                        var ns = __loop4_item.__loop4_item_ns;
                        ++__loop4_iteration;
                        __printer.TrimLine();
                        __printer.WriteLine();
                        __printer.WriteTemplateOutput("main.class=");
                        __printer.Write(Generated_GetPackage(ns).ToLower());
                        __printer.WriteTemplateOutput("client.Program");
                        __printer.WriteLine();
                    }
                    __printer.TrimLine();
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("manifest.file=manifest.mf");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("meta.inf.dir=${src.dir}/META-INF");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("mkdist.disabled=false");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("platform.active=default_platform");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("run.classpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${javac.classpath}:\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${build.classes.dir}:\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${libs.metro.classpath}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("run.test.classpath=\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${javac.test.classpath}:\\");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    ${build.test.classes.dir}");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("source.encoding=UTF-8");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("src.dir=src");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("test.src.dir=test");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_Client_nbproject_project_xml()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("<project xmlns=\"http://www.netbeans.org/ns/project/1\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <type>org.netbeans.modules.java.j2seproject</type>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    <configuration>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        <data xmlns=\"http://www.netbeans.org/ns/j2se-project/3\">");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <name>");
                    __printer.Write(Generated_GetClientProjectName());
                    __printer.WriteTemplateOutput("</name>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <source-roots>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <root id=\"src.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </source-roots>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            <test-roots>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("                <root id=\"test.src.dir\"/>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("            </test-roots>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("        </data>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("    </configuration>");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("</project>");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            public List<string> Generated_Generate_Client_manifest_mf()
            {
                List<string> __result = new List<string>();
                using(TemplatePrinter __printer = new TemplatePrinter(__result))
                {
                    __printer.WriteTemplateOutput("Manifest-Version: 1.0");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("X-COMMENT: Main-Class will be added automatically by build");
                    __printer.WriteLine();
                    __printer.WriteTemplateOutput("^");
                    __printer.WriteLine();
                }
                return __result;
            }
            
            #endregion
        }
    }
    
